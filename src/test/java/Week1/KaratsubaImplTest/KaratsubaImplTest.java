package test.java.Week1.KaratsubaImplTest;

import main.java.Week1.Week1_DivideAndConquer.KaratsubaImpl;
import org.junit.jupiter.api.Test;

import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.*;

/**
 * Test class for the Karatsuba-algorithm implementation.
 * More testcases can be found at: https://github.com/beaunus/stanford-algs/tree/master/testCases/course1/assignment1Multiplication
 */

class KaratsubaImplTest {
    @Test
    void karatsubaWithZeroOnly() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("0");
        BigInteger y = new BigInteger("0");
        assertEquals(test.karatsuba(x, y), BigInteger.ZERO);
    }

    @Test
    void karatsubaMultiplyWithZero() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("0");
        BigInteger y = new BigInteger("24");
        assertEquals(test.karatsuba(x, y), BigInteger.ZERO);
    }

    @Test
    void karatsubaWithSingleDigits() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("8");
        BigInteger y = new BigInteger("3");
        assertEquals(test.karatsuba(x, y), BigInteger.valueOf(24));
    }

    @Test
    void karatsubaWithSmallNumbers() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("12");
        BigInteger y = new BigInteger("15");
        assertEquals(test.karatsuba(x, y), BigInteger.valueOf(180));
    }

    @Test
    void karatsubaWithFewDigits() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("1234");
        BigInteger y = new BigInteger("3456");
        assertEquals(test.karatsuba(x, y), BigInteger.valueOf(4264704));
    }

    @Test
    void karatsubaWithLargerNumbers() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("14977670");
        BigInteger y = new BigInteger("84664984");
        assertEquals(test.karatsuba(x, y), new BigInteger("1268084190907280"));
    }

    @Test
    void karatsubaWithLargerNumbers2() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("90109928");
        BigInteger y = new BigInteger("95084501");
        assertEquals(test.karatsuba(x, y), new BigInteger("8568057539025928"));
    }

    @Test
    void karatsubaWithLargerNumbers3() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("3708846298640594");
        BigInteger y = new BigInteger("9081685595280321");
        assertEquals(test.karatsuba(x, y), new BigInteger("33682576005473018115324659950674"));
    }

    @Test
    void karatsubaWithVeryLargeNumbers() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("99615790486094417376090801668169164966124889237191368396003822190453363522518069831766512078559950872531851587461689758377693490");
        BigInteger y = new BigInteger("85846470797846424040727649083188111668669506401258790859272612286556399320873443068516991447037214833598518508798979965495812015");
        assertEquals(test.karatsuba(x, y), new BigInteger("8551664048968892035764827310621985700104429181183039862339115181632334111008566449981139303677102152475615977150451813908707880217676806490783762930161151350713342129833506462421020497489849585329787664605997284508284088644995587365910055827035190329282350"));
    }

    @Test
    void karatsubaWithVeryLargeSingleDigitNumbers() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111");
        BigInteger y = new BigInteger("22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
        assertEquals(test.karatsuba(x, y), new BigInteger("246913580246913580246913580246913580246913580246913580246913580246913580246913580246913580246913580246913580246913580246913580246913577777777777775308641975308641975308641975308641975308641975308641975308641975308641975308641975308641975308641975308641975308641975308641975308642"));
    }

    @Test
    void karatsubaWithVeryLargeNumbersWithDifferentDigits() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("54912929456625402256174854408349005059747367418045281224869677103460587001371838509047325775339825409089700424382586661886548455");
        BigInteger y = new BigInteger("46159761840763928340146255755371712831239294454920928659343103820160462080093196044837908676121279113445132081834876936121057294");
        assertEquals(test.karatsuba(x, y), new BigInteger("2534767745696498721291598226410808420875926624404989594109011804054230420328163716811636469827804550673802278410568911221048870743264706668346786117132264407551450821426489441139772838020127634525234251586349419324977858145598895358201970734412370962180770"));
    }

    @Test
    void karatsubaWithVeryLargeNumbersWithDifferentDigits2() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("62347236486327864783274832748327498327489327483247832748732743240324732473247320032000473284732747676171617276476374673626423657653264783284327473463274632746327643274632746372647326478326432748327483274832743284732476327463254912929456625402256174854408349005059747367418045281224869677103460587001371838509047325775339825409089700424382586661886548455");
        BigInteger y = new BigInteger("46159761840763928340146255755376371266376274676326432647326432404484804040000000847328746181728738738246726462873274872747747838483274737437483274171283123929445492092865934310382016046208009319604483790867612127911344513208183487693612105729743274837483747324773284773284773284783274737470010483748374872723874872347823473728748374832787432743287472834734");
        assertEquals(test.karatsuba(x, y), new BigInteger("2877933587638681475433396015536198721257949213766562144583042043678839593413560139074859531044923072728462380325642427809563677502095383072961862734966429502452953887754039788635245232503662223403083567891538699228775796379684582731750601384219839501138183962427283194513520872625143317988913678305303616442203470768397456549342683038369108419915717693842422021276296255431196325081193333581217443228138844804155822428556623131169013393383343558922403232616306897296248011494824459140099863831347290533349683494428355675599478393577223237639536216064598959844578819382721272771633124684823490346016187284471090230902711152414446003926194025938444983188602758949749036431841778431155127964163006545661898035970"));
    }

    @Test
    void karatsubaWithNumbersOfDifferentLength() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("77");
        BigInteger y = new BigInteger("123456789");
        assertEquals(test.karatsuba(x, y), new BigInteger("9506172753"));
    }

    @Test
    void karatsubaWithNumbersOfDifferentLength2() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("2");
        BigInteger y = new BigInteger("565656565656565656565656");
        assertEquals(test.karatsuba(x, y), new BigInteger("1131313131313131313131312"));
    }

    @Test
    void karatsubaWithNumbersOfDifferentLength3() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("3");
        BigInteger y = new BigInteger("222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222");
        assertEquals(test.karatsuba(x, y), new BigInteger("666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666"));
    }

    @Test
    void karatsubaWithNumbersOfDifferentLength4() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("28748237487238472376476274672646217636212173721372713872193721874738739594388548385018209194217472174721042174712472748732740147217471247210400");
        BigInteger y = new BigInteger("21738972138217321737217");
        assertEquals(test.karatsuba(x, y), new BigInteger("624957133757931898466553929411504286381544598392483094901797926674113600620229231444837247575672075317316666562302109083558551073986995893960937003972711793109456800"));
    }

    @Test
    void karatsubaWithNumbersOfDifferentLength5() {
        KaratsubaImpl test = new KaratsubaImpl();
        BigInteger x = new BigInteger("63547586");
        BigInteger y = new BigInteger("7382714782174721782713721877482748294820402148214884828429184982148721874872462164621847217421409284928194898214821874872148219489021849821948217487218462176426748721487218478728472174827148921747261468271894789217482174627848217");
        assertEquals(test.karatsuba(x, y), new BigInteger("469153702533719399513073554389416410781452860068270140114698877563004368133539028438052993527947704775172969119067639568119077982725492057439339038315719125944225987079099064177786756178435281239541368419494505500749821195630202564754162"));
    }
}